---
- name: Création namespace
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ app_name }}"
  become: yes

- name: Check current working directory structure
  shell: find . -type f -name "*.yml" | grep -E "kubernetes|roles"
  register: find_output
  ignore_errors: yes

- name: Display found files
  debug:
    var: find_output.stdout_lines
  when: find_output.stdout != ""

- name: Get absolute path to playbook directory
  shell: pwd
  register: pwd_output

- name: Debug playbook location
  debug:
    var: playbook_dir

- name: Copy Kubernetes manifests to remote host
  copy:
    src: "{{ playbook_dir }}/../kubernetes/"
    dest: "/tmp/kubernetes/"

- name: Création volume
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    state: present
    src: "/tmp/kubernetes/persistent-volume.yml"
    namespace: "{{ app_name }}"
  become: yes

- name: Déploiement API
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    state: present
    src: "/tmp/kubernetes/api-deployment.yml"
    namespace: "{{ app_name }}"
  become: yes

- name: Déploiement Frontend
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    state: present
    src: "/tmp/kubernetes/frontend-deployment.yml"
    namespace: "{{ app_name }}"
  become: yes

- name: Attente du déploiement de tous les services
  kubernetes.core.k8s_info:
    kind: Deployment
    name: "{{ item }}"
    namespace: "{{ app_name }}"
    wait: yes
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: 300
  loop:
    - api-deployment
    - frontend-deployment

- name: Vérification status PVC
  kubernetes.core.k8s_info:
    kind: PersistentVolumeClaim
    name: app-data-pvc
    namespace: "{{ app_name }}"
  register: pvc_status
- debug:
    var: pvc_status.resources[0].status.phase
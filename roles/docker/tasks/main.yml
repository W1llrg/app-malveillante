#---
#- name: Installer les d√©pendances
#  apt:
#    name:
#      - docker.io
#      - docker-compose
#    state: present
#---
#- name: Update apt cache
#  apt:
#    update_cache: yes
#    cache_valid_time: 3600
#
#- name: Install required packages
#  apt:
#    name:
#      - apt-transport-https
#      - ca-certificates
#      - curl
#      - gnupg
#      - lsb-release
#    state: present
#
#- name: Add Docker GPG key
#  shell: |
#    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
#  args:
#    creates: /usr/share/keyrings/docker-archive-keyring.gpg
#
#- name: Add Docker repository
#  apt_repository:
#    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
#    state: present
#
#- name: Install Docker and Docker Compose
#  apt:
#    name:
#      - docker-ce
#      - docker-ce-cli
#      - containerd.io
#      - docker-compose
#    state: present
#    update_cache: yes

---
- name: Check internet connectivity
  command: ping -c 4 8.8.8.8
  register: ping_result
  ignore_errors: true

- name: Display connectivity status
  debug:
    msg: "Internet connectivity: {{ 'Available' if ping_result.rc == 0 else 'Unavailable' }}"

- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  when: ping_result.rc == 0

- name: Install dependency packages
  apt:
    name:
      - ca-certificates
      - curl
    state: present
  when: ping_result.rc == 0

- name: Install Docker using convenience script
  shell: |
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
  args:
    creates: /usr/bin/docker
  when: ping_result.rc == 0

- name: Install Docker Compose
  get_url:
    url: https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: '0755'
  when: ping_result.rc == 0

- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes
  when: ping_result.rc == 0